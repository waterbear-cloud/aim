network:
{% if cookiecutter.starting_template == 'simple-web-app' %}
  title: "{{cookiecutter.network_environment_title}}"
  availability_zones: 3
  enabled: true
  vpc:
    enabled: true
    enable_dns_hostnames: true
    enable_dns_support: true
    enable_internet_gateway: true
    nat_gateway:
      {{cookiecutter.application_name}}:
        enabled: true
        availability_zone: 1
        segment: aim.ref netenv.{{cookiecutter.network_environment_name}}.network.vpc.segments.public
        default_route_segments:
          - aim.ref netenv.{{cookiecutter.network_environment_name}}.network.vpc.segments.web
    vpn_gateway:
      {{cookiecutter.application_name}}:
        enabled: false
    private_hosted_zone:
      enabled: false
    security_groups:
      {{cookiecutter.application_name}}:
        alb:
          enabled: true
          egress:
            - cidr_ip: 0.0.0.0/0
              name: ANY
              protocol: "-1"
          ingress:
            - cidr_ip: 0.0.0.0/0
              from_port: 80
              name: HTTP
              protocol: tcp
              to_port: 80
        web:
          enabled: true
          egress:
            - cidr_ip: 0.0.0.0/0
              name: ANY
              protocol: "-1"
          ingress:
            - from_port: 80
              name: HTTP
              protocol: tcp
              source_security_group: aim.ref netenv.{{cookiecutter.network_environment_name}}.network.vpc.security_groups.{{cookiecutter.application_name}}.alb
              to_port: 80
    segments:
      public:
        enabled: true
      web:
        enabled: true

{% endif %}

applications:
{% if cookiecutter.starting_template == 'simple-web-app' %}
  {{cookiecutter.application_name}}:
    title: {{cookiecutter.application_title}}
    enabled: true
    managed_updates: true
    groups:
      site:
        enabled: true
        type: Application
        order: 1
        resources:
          alb:
            type: LBApplication
            enabled: true
            order: 1
            target_groups:
              {{cookiecutter.application_name}}:
                health_check_interval: 30
                health_check_timeout: 10
                healthy_threshold: 2
                unhealthy_threshold: 2
                port: 80
                protocol: HTTP
                health_check_http_code: 200
                health_check_path: /
                connection_drain_timeout: 300
            listeners:
              http:
                port: 80
                protocol: HTTP
                target_group: {{cookiecutter.application_name}}
            scheme: internet-facing
            security_groups:
              - aim.ref netenv.{{cookiecutter.network_environment_name}}.network.vpc.security_groups.{{cookiecutter.application_name}}.alb
            segment: public
          web:
            type: ASG
            order: 2
            enabled: true
            associate_public_ip_address: false
            cooldown_secs: 300
            ebs_optimized: false
            health_check_grace_period_secs: 300
            health_check_type: ELB
            instance_iam_role:
              enabled: true
            instance_ami: aim.ref function.aws.ec2.ami.latest.amazon-linux-2
            instance_key_pair: aim.ref resource.ec2.keypairs.aimkeypair
            instance_monitoring: false
            instance_type: t2.nano
            max_instances: 2
            min_instances: 1
            desired_capacity: 1
            target_groups:
              - aim.ref netenv.{{cookiecutter.network_environment_name}}.applications.{{cookiecutter.application_name}}.groups.site.resources.alb.target_groups.{{cookiecutter.application_name}}
            security_groups:
              - aim.ref netenv.{{cookiecutter.network_environment_name}}.network.vpc.security_groups.{{cookiecutter.application_name}}.web
            segment: web
            termination_policies:
              - Default
            update_policy_max_batch_size: 1
            update_policy_min_instances_in_service: 0
            user_data_script: |
              #!/bin/bash
              yum update -y
              yum install httpd -y
              echo "<html><body><h1>Hello world!</h1></body></html>" > /var/www/html/index.html
              service httpd start

{% endif %}


environments:
{% if cookiecutter.starting_template == 'simple-web-app' %}
  dev:
    title: "Development Environment"
    default:
      applications:
        {{cookiecutter.application_name}}:
          enabled: true
      network:
        aws_account: aim.ref accounts.master
        availability_zones: 3
        name: example
        vpc:
          cidr: 10.20.0.0/16
          segments:
            public:
              az1_cidr: 10.20.1.0/24
              az2_cidr: 10.20.2.0/24
              internet_access: true
            web:
              az1_cidr: 10.20.3.0/24
              az2_cidr: 10.20.4.0/24
    {{cookiecutter.aws_default_region}}:
      enabled: true

  prod:
    title: "Production Environment"
    default:
      applications:
        {{cookiecutter.application_name}}:
          enabled: true
          groups:
            site:
              web:
                instance_type: t2.medium
                max_instances: 4
                min_instances: 2
                desired_capacity: 2
      network:
        aws_account: aim.ref accounts.master
        availability_zones: 3
        name: example
        vpc:
          cidr: 10.20.0.0/16
          segments:
            public:
              az1_cidr: 10.20.1.0/24
              az2_cidr: 10.20.2.0/24
              internet_access: true
            web:
              az1_cidr: 10.20.3.0/24
              az2_cidr: 10.20.4.0/24
    {{cookiecutter.aws_default_region}}:
      enabled: false

{% endif -%}

